name: beam_PreCommit_Go

on:
  push:
    tags: ['v*']
    branches: ['master', 'release-*']
  pull_request:
    branches: ['master']
    paths: ['model/**', 'sdks/go.**', 'release/**']
  issue_comment:
    types: [created]
  schedule:
    - cron: '* */6 * * *'

permissions: read-all
#test

jobs:
  beam_PreCommit_Go:
        if: ${{github.event.issue.pull_request}} || ${{github.event.comment.body == 'Run Go PreCommit'}} || ${{github.event.schedule}}
        runs-on: [self-hosted, ubuntu-20.04]
        name: beam_PreCommit_Go
        steps:       
          # - name: Git checkout
          #   uses: actions/checkout@v3
          # - name: Install Java
          #   uses: actions/setup-java@v3.8.0
          #   with:
          #     distribution: 'zulu'
          #     java-version: '8'
          # - name: Install Go
          #   uses: actions/setup-go@v3
          #   with:
          #     go-version: '1.20'
          # - name: Setup Gradle
          #   uses: gradle/gradle-build-action@v2
          #   with:
          #     cache-read-only: false
          # - name: run goPreCommit script
          #   run: ./gradlew :goPreCommit
          - name: get the one latest&last sha # get the last commit sha in pull_Requst
            run: | 
              URL=${{ github.event.pull_request.url }}/commits
              PRSHA=$(curl  \
              -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -s $URL  | jq -r '.[] | .sha' | xargs | awk -F " " '{print $NF}' )
              env
          - name: echo PRSHA # check the lastest SHA
            run: |
              echo $PRSHA



# - name: get the one latest&last sha # get the last commit sha in pull_Requstsdasd
# run: | 
#   URL=${{ github.event.issue.pull_request.url }}/commits
#   echo $(curl --request POST -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -s $URL | jq -r '.[] | .sha' | xargs | awk -F " " '{print $NF}') >> "$GIHTUB_ENV"
